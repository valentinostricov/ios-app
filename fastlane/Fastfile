# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end
  
  desc "Increment build and version"
  lane :increment do |options|
    increment_version_number
    increment_build_number
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end
  
  desc "Load certificates"
  lane :certificates do |options|
    cert(development: true)
    sigh(force: true, development: true)
  end
  
  desc "Upload app to firebase"
  desc 'Add description:"Some description" to configure crashlytics version description'
  lane :dev do |options|
    cert(development: true)
    sigh(force: true, development: true, app_identifier: "md.rompetrol.iosapp")
    gym(scheme: "TokenDWalletTemplate", export_method: "development")
    description = 'New automatic build'
    if options[:description]
        description = options[:description]
    end
    firebase_app_distribution(
      app: '1:931624531634:ios:d26b4b56d0d1fc25513bab',
      release_notes: description,
      testers: 'alexandr.barenboym@gmail.com, denis.shuryghin@gmail.com'
    )
  end
  
  desc "Upload app to firebase"
  desc 'Add description:"Some description" to configure crashlytics version description'
  lane :dev_last do |options|
    description = 'New automatic build'
    if options[:description]
        description = options[:description]
    end
    firebase_app_distribution(
      app: '1:127153648350:ios:8514b2ccfb964acb33084f',
      release_notes: description,
      testers: 'alexandr.barenboym@gmail.com, denis.shuryghin@gmail.com'
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # increment
    say "Success"
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    say "Failed"
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
